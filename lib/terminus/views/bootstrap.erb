(function() {
  var faye = '<%= ::Terminus::FAYE_MOUNT %>',
      host = '<%= host %>';
  
  var withPackageManager = function(callback) {
    if (window.JS && JS.Packages) return callback();
    
    var script = document.createElement('script'),
        head   = document.getElementsByTagName('head')[0];
    
    script.type = 'text/javascript';
    script.src  = host + '/loader.js';
    
    script.onload = script.onreadystatechange = function() {
      var state = script.readyState;
      if (!state || state === 'loaded' || state === 'complete') {
        script.onload = script.onreadystatechange = null;
        callback();
      }
    };
    head.appendChild(script);
  };
  
  withPackageManager(function() {
    JS.cacheBust = true;
    if (!window.steal) window.steal = {then: function(fn) { fn() }};
    
    JS.Packages(function() { with(this) {
      file(host + faye + '/client.js')
        .provides('Faye', 'Faye.Client');
      
      file(host + '/xpath/pathology-min.js')
        .provides('document.evaluate');
      
      file(host + '/syn/synthetic.js',
           host + '/syn/mouse.js',
           host + '/syn/browsers.js',
           host + '/syn/drag/drag.js')
        .provides('Syn');
      
      file(host + '/terminus.js')
        .requires('Faye.Client', 'document.evaluate', 'Syn')
        .provides('Terminus');
    }});
    
    JS.require('Faye', function() {
      JS.require('document.evaluate', function() {
        JS.require('Syn', function() {
          JS.require('Terminus', function() {
            Terminus.connect(host + faye);
          });
        });
      });
    });
  });
})();

