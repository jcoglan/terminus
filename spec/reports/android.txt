
Capybara::Session
  with non-existant driver
    should raise an error

Capybara::Session
  with terminus driver
    it should behave like session
      should encode complex field names, like array[][value]
      #visit
        should fetch a response from the driver
      #body
        should return the unmodified page body
      #html
        should return the unmodified page body
      #source
        should return the unmodified page source
      #reset_session!
        removes cookies
        resets current host
        resets current path
        resets page body
      it should behave like all
        #all
          should find all elements using the given locator
          should return an empty array when nothing was found
          should accept an XPath instance
          with css selectors
            should find all elements using the given selector
            should find all elements when given a list of selectors
          with xpath selectors
            should find the first element using the given locator
          with css as default selector
            should find the first element using the given locator
          with visible filter
            should only find visible nodes
            should only find invisible nodes
          within a scope
            should find any element using the given locator
      it should behave like first
        #first
          should find the first element using the given locator
          should return nil when nothing was found
          should accept an XPath instance
          with css selectors
            should find the first element using the given selector
          with xpath selectors
            should find the first element using the given locator
          with css as default selector
            should find the first element using the given locator
          with visible filter
            should only find visible nodes if true given
            should include invisible nodes if false given
          with prefer visible elements
            should find invisible elements if no visible element exists
            should prefer visible elements over invisible elements (FAILED - 1)
            should return the first invisible element if no visible elements exist (FAILED - 2)
            find visible links normally
          without prefer visible elements
            should find invisible elements if no visible element exists
            should not prefer visible elements over invisible elements (FAILED - 3)
          within a scope
            should find the first element using the given locator
      it should behave like attach_file
        #attach_file
          with normal form
            should set a file path by id (FAILED - 4)
            should set a file path by label (FAILED - 5)
          with multipart form
            should set a file path by id (FAILED - 6)
            should set a file path by label (FAILED - 7)
            should not break if no file is submitted
            should send content type text/plain when uploading a text file (FAILED - 8)
            should send content type image/jpeg when uploading an image (FAILED - 9)
            should not break when using HTML5 multiple file input (FAILED - 10)
          with a locator that doesn't exist
            should raise an error
          with a path that doesn't exist
            should raise an error
      it should behave like check
        #check
          should check a checkbox by id
          should check a checkbox by label
          'checked' attribute
            should be true if checked
            should be false if unchecked
          checking
            should not change an already checked checkbox
            should check an unchecked checkbox
          unchecking
            should not change an already unchecked checkbox
            should uncheck a checked checkbox
          with a locator that doesn't exist
            should raise an error
      it should behave like choose
        #choose
          should choose a radio button by id
          should choose a radio button by label
          with a locator that doesn't exist
            should raise an error
      it should behave like click_link_or_button
        #click
          should click on a link
          should click on a button
          should click on a button with no type attribute
          should be aliased as click_on
          with a locator that doesn't exist
            should raise an error
      it should behave like click_button
        #click_button
          should serialize and send valueless buttons that were clicked
          should not send image buttons that were not clicked
          should serialize and send GET forms
          should follow redirects
          should post pack to the same URL when no action given
          should post pack to the same URL when blank action given
          with multiple values with the same name
            should use the latest given value
          with a form that has a relative url as an action
            should post to the correct url
          with a form that has no action specified
            should post to the correct url
          with value given on a submit button
            on a form with HTML5 fields
              should serialise and submit search fields
              should serialise and submit email fields
              should serialise and submit url fields
              should serialise and submit tel fields
              should serialise and submit color fields
            on an HTML4 form
              should serialize and submit text fields
              should escape fields when submitting
              should serialize and submit password fields
              should serialize and submit hidden fields
              should not serialize fields from other forms
              should submit the button that was clicked, but not other buttons
              should serialize radio buttons
              should serialize check boxes
              should serialize text areas
              should serialize select tag with values
              should serialize select tag without values
              should serialize first option for select tag with no selection
              should not serialize a select tag without options
              should not submit disabled fields
          with id given on a submit button
            should submit the associated form
            should work with partial matches
          with title given on a submit button
            should submit the associated form
            should work with partial matches
          with alt given on an image button
            should submit the associated form
            should work with partial matches
          with value given on an image button
            should submit the associated form
            should work with partial matches
          with id given on an image button
            should submit the associated form
          with title given on an image button
            should submit the associated form
            should work with partial matches
          with text given on a button defined by <button> tag
            should submit the associated form
            should work with partial matches
            should prefer exact matches over partial matches
          with id given on a button defined by <button> tag
            should submit the associated form
            should serialize and send GET forms
          with value given on a button defined by <button> tag
            should submit the associated form
            should work with partial matches
            should prefer exact matches over partial matches
          with title given on a button defined by <button> tag
            should submit the associated form
            should work with partial matches
          with a locator that doesn't exist
            should raise an error
      it should behave like click_link
        #click_link
          should follow relative links
          should follow redirects
          should follow redirects
          should add query string to current URL with naked query string
          should do nothing on anchor links
          should do nothing on URL+anchor links for the same page
          should follow link on URL+anchor links for a different page
          raise an error with links with no href
          with id given
            should take user to the linked page
          with text given
            should take user to the linked page
            should accept partial matches
            should prefer exact matches over partial matches
          with title given
            should take user to the linked page
            should accept partial matches
            should prefer exact matches over partial matches
          with alternative text given to a contained image
            should take user to the linked page
            should take user to the linked page
            should prefer exact matches over partial matches
          with a locator that doesn't exist
            should raise an error
      it should behave like fill_in
        #fill_in
          should fill in a text field by id
          should fill in a text field by name
          should fill in a text field by label without for (FAILED - 11)
          should fill in a url field by label without for
          should favour exact label matches over partial matches
          should fill in a textarea by id

An error occurred in an after hook
  NoMethodError: undefined method `reset!' for nil:NilClass
  occurred at /home/james/projects/terminus/vendor/capybara/lib/capybara/session.rb:70:in `reset!'


An error occurred in an after hook
  NoMethodError: undefined method `return_to_dock' for nil:NilClass
  occurred at /home/james/projects/terminus/spec/terminus_session_spec.rb:11:in `block (3 levels) in <top (required)>'

          should fill in a textarea by label (FAILED - 12)
          should fill in a textarea by name
          should fill in a password field by id
          should fill in a field with a custom type
          should fill in a field without a type
          should fill in a text field respecting its maxlength attribute
          should fill in a password field by name
          should fill in a password field by label
          should fill in a password field by name
          should prefer exact matches over partial matches
          should throw an exception if a hash containing 'with' is not provided
          with ignore_hidden_fields
            should not find a hidden field
          with a locator that doesn't exist
            should raise an error
      it should behave like find_button
        #find_button
          should find any field
          should raise error if the field doesn't exist
      it should behave like find_field
        #find_field
          should find any field
          should raise error if the field doesn't exist
          should be aliased as 'field_labeled' for webrat compatibility
      it should behave like find_link
        #find_link
          should find any field
          should raise error if the field doesn't exist
      it should behave like find_by_id
        #find_by_id
          should find any element by id
          should raise error if no element with id is found
      it should behave like find
        #find
          should find the first element using the given locator
          should find the first element using the given locator and options
          should raise ElementNotFound with specified fail message if nothing was found
          should raise ElementNotFound with a useful default message if nothing was found
          should accept an XPath instance and respect the order of paths
          the returned node
            should act like a session object
            should scope CSS selectors

An error occurred in an after hook
  NoMethodError: undefined method `reset!' for nil:NilClass
  occurred at /home/james/projects/terminus/vendor/capybara/lib/capybara/session.rb:70:in `reset!'


An error occurred in an after hook
  NoMethodError: undefined method `return_to_dock' for nil:NilClass
  occurred at /home/james/projects/terminus/spec/terminus_session_spec.rb:11:in `block (3 levels) in <top (required)>'

            should have a reference to its parent if there is one (FAILED - 13)
          with css selectors
            should find the first element using the given locator
          with id selectors
            should find the first element using the given locator
          with xpath selectors
            should find the first element using the given locator
          with custom selector
            should use the custom selector
          with custom selector with :for option
            should use the selector when it matches the :for option (FAILED - 14)
          with custom selector with failure_message option
            should raise an error with the failure message if the element is not found
            should pass the selector as the second argument
          with css as default selector
            should find the first element using the given locator
          within a scope
            should find the first element using the given locator
      it should behave like has_content
        #has_content?
          should be true if the given content is on the page at least once
          should be true if scoped to an element which has the content
          should be false if scoped to an element which does not have the content
          should ignore tags
          should ignore extra whitespace and newlines
          should be false if the given content is not on the page
          should handle single quotes in the content
          should handle double quotes in the content
          should handle mixed single and double quotes in the content
        #has_no_content?
          should be false if the given content is on the page at least once
          should be false if scoped to an element which has the content
          should be true if scoped to an element which does not have the content
          should ignore tags
          should be true if the given content is not on the page
          should handle single quotes in the content
          should handle double quotes in the content
          should handle mixed single and double quotes in the content
      it should behave like has_css
        #has_css?
          should be true if the given selector is on the page
          should be false if the given selector is not on the page
          should respect scopes
          with between
            should be true if the content occurs within the range given
            should be false if the content occurs more or fewer times than range
            should be false if the content isn't on the page at all
          with count
            should be true if the content is on the page the given number of times
            should be false if the content occurs the given number of times
            should be false if the content isn't on the page at all
            should coerce count to an integer
          with maximum
            should be true when content occurs same or fewer times than given (FAILED - 15)
            should be false when content occurs more times than given
            should be false if the content isn't on the page at all
            should coerce maximum to an integer (FAILED - 16)
          with minimum
            should be true when content occurs same or more times than given (FAILED - 17)
            should be false when content occurs fewer times than given
            should be false if the content isn't on the page at all
            should coerce minimum to an integer (FAILED - 18)
          with text
            should discard all matches where the given string is not contained
            should discard all matches where the given regexp is not matched
        #has_no_css?
          should be false if the given selector is on the page
          should be true if the given selector is not on the page
          should respect scopes
          with between
            should be false if the content occurs within the range given
            should be true if the content occurs more or fewer times than range
            should be true if the content isn't on the page at all
          with count
            should be false if the content is on the page the given number of times
            should be true if the content is on the page the given number of times
            should be true if the content isn't on the page at all
            should coerce count to an integer
          with maximum
            should be false when content occurs same or fewer times than given (FAILED - 19)
            should be true when content occurs more times than given
            should be true if the content isn't on the page at all
            should coerce maximum to an integer (FAILED - 20)
          with minimum
            should be false when content occurs more times than given (FAILED - 21)
            should be true when content occurs fewer times than given
            should be true if the content isn't on the page at all
            should coerce minimum to an integer (FAILED - 22)
          with text
            should discard all matches where the given string is not contained
            should discard all matches where the given regexp is not matched
      it should behave like has_css
        #has_css?
          should be true if the given selector is on the page
          should be false if the given selector is not on the page
          should respect scopes
          with between
            should be true if the content occurs within the range given
            should be false if the content occurs more or fewer times than range
            should be false if the content isn't on the page at all
          with count
            should be true if the content is on the page the given number of times
            should be false if the content occurs the given number of times
            should be false if the content isn't on the page at all
            should coerce count to an integer
          with maximum
            should be true when content occurs same or fewer times than given (FAILED - 23)
            should be false when content occurs more times than given
            should be false if the content isn't on the page at all
            should coerce maximum to an integer (FAILED - 24)
          with minimum
            should be true when content occurs same or more times than given (FAILED - 25)
            should be false when content occurs fewer times than given
            should be false if the content isn't on the page at all
            should coerce minimum to an integer (FAILED - 26)
          with text
            should discard all matches where the given string is not contained
            should discard all matches where the given regexp is not matched
        #has_no_css?
          should be false if the given selector is on the page
          should be true if the given selector is not on the page
          should respect scopes
          with between
            should be false if the content occurs within the range given
            should be true if the content occurs more or fewer times than range
            should be true if the content isn't on the page at all
          with count
            should be false if the content is on the page the given number of times
            should be true if the content is on the page the given number of times
            should be true if the content isn't on the page at all
            should coerce count to an integer
          with maximum
            should be false when content occurs same or fewer times than given (FAILED - 27)
            should be true when content occurs more times than given
            should be true if the content isn't on the page at all
            should coerce maximum to an integer (FAILED - 28)
          with minimum
            should be false when content occurs more times than given (FAILED - 29)
            should be true when content occurs fewer times than given
            should be true if the content isn't on the page at all
            should coerce minimum to an integer (FAILED - 30)
          with text
            should discard all matches where the given string is not contained
            should discard all matches where the given regexp is not matched
      it should behave like has_selector
        #has_selector?
          should be true if the given selector is on the page
          should be false if the given selector is not on the page
          should use default selector
          should respect scopes
          with count
            should be true if the content is on the page the given number of times
            should be false if the content is on the page the given number of times
            should be false if the content isn't on the page at all
          with text
            should discard all matches where the given string is not contained
            should discard all matches where the given regexp is not matched
        #has_no_selector?
          should be false if the given selector is on the page
          should be true if the given selector is not on the page
          should use default selector
          should respect scopes
          with count
            should be false if the content is on the page the given number of times
            should be true if the content is on the page the wrong number of times
            should be true if the content isn't on the page at all
          with text
            should discard all matches where the given string is contained
            should discard all matches where the given regexp is matched
      it should behave like has_xpath
        #has_xpath?
          should be true if the given selector is on the page
          should be false if the given selector is not on the page
          should use xpath even if default selector is CSS
          should respect scopes
          with count
            should be true if the content is on the page the given number of times
            should be false if the content is on the page the given number of times
            should be false if the content isn't on the page at all
          with text
            should discard all matches where the given string is not contained
            should discard all matches where the given regexp is not matched
        #has_no_xpath?
          should be false if the given selector is on the page
          should be true if the given selector is not on the page
          should use xpath even if default selector is CSS
          should respect scopes
          with count
            should be false if the content is on the page the given number of times
            should be true if the content is on the page the wrong number of times
            should be true if the content isn't on the page at all
          with text
            should discard all matches where the given string is contained
            should discard all matches where the given regexp is matched
      it should behave like has_link
        #has_link?
          should be true if the given link is on the page
          should be false if the given link is not on the page
        #has_no_link?
          should be false if the given link is on the page
          should be true if the given link is not on the page
      it should behave like has_button
        #has_button?
          should be true if the given button is on the page
          should be false if the given button is not on the page
        #has_no_button?
          should be true if the given button is on the page
          should be false if the given button is not on the page
      it should behave like has_field
        #has_field
          should be true if the field is on the page
          should be false if the field is not on the page
          with value
            should be true if a field with the given value is on the page
            should be false if the given field is not on the page
            should be true after the field has been filled in with the given value
            should be false after the field has been filled in with a different value
        #has_no_field
          should be false if the field is on the page
          should be true if the field is not on the page
          with value
            should be false if a field with the given value is on the page
            should be true if the given field is not on the page
            should be false after the field has been filled in with the given value
            should be true after the field has been filled in with a different value
        #has_checked_field?
          should be true if a checked field is on the page
          should be false if an unchecked field is on the page
          should be false if no field is on the page
          should be true after an unchecked checkbox is checked
          should be false after a checked checkbox is unchecked (FAILED - 31)
          should be true after an unchecked radio button is chosen
          should be false after another radio button in the group is chosen
        #has_no_checked_field?
          should be false if a checked field is on the page
          should be true if an unchecked field is on the page
          should be true if no field is on the page
        #has_unchecked_field?
          should be false if a checked field is on the page
          should be true if an unchecked field is on the page
          should be false if no field is on the page
          should be false after an unchecked checkbox is checked
          should be true after a checked checkbox is unchecked

An error occurred in an after hook
  NoMethodError: undefined method `reset!' for nil:NilClass
  occurred at /home/james/projects/terminus/vendor/capybara/lib/capybara/session.rb:70:in `reset!'


An error occurred in an after hook
  NoMethodError: undefined method `return_to_dock' for nil:NilClass
  occurred at /home/james/projects/terminus/spec/terminus_session_spec.rb:11:in `block (3 levels) in <top (required)>'

          should be false after an unchecked radio button is chosen (FAILED - 32)
          should be true after another radio button in the group is chosen
        #has_no_unchecked_field?
          should be true if a checked field is on the page
          should be false if an unchecked field is on the page
          should be true if no field is on the page
      it should behave like has_select
        #has_select?
          should be true if the field is on the page
          should be false if the field is not on the page
          with selected value
            should be true if a field with the given value is on the page
            should be false if the given field is not on the page
            should be true after the given value is selected
            should be false after a different value is selected
            should be true after the given values are selected
            should be false after one of the values is unselected
          with options
            should be true if a field with the given options is on the page (FAILED - 33)
            should be false if the given field is not on the page
        #has_no_select?
          should be false if the field is on the page
          should be true if the field is not on the page
          with selected value
            should be false if a field with the given value is on the page
            should be true if the given field is not on the page
            should be false after the given value is selected
            should be true after a different value is selected
            should be false after the given values are selected
            should be true after one of the values is unselected
          with options
            should be false if a field with the given options is on the page (FAILED - 34)
            should be true if the given field is not on the page
      it should behave like has_table
        #has_table?
          should be true if the field is on the page
          should be false if the field is not on the page
          with rows
            should be true if a table with the given rows is on the page (FAILED - 35)
            should be true if the given rows are incomplete (FAILED - 36)
            should be false if the given table is not on the page
            should be false if the given rows contain incorrect elements
            should be false if the given rows are incorrectly ordered
            should be false if the only some of the given rows are correct
            should be false if the given rows are out of order
        #has_no_table?
          should be false if the field is on the page
          should be true if the field is not on the page
          with rows
            should be false if a table with the given rows is on the page (FAILED - 37)
            should be false if the given rows are incomplete (FAILED - 38)
            should be true if the given table is not on the page
            should be true if the given rows contain incorrect elements
            should be true if the given rows are incorrectly ordered
            should be true if the only some of the given rows are correct
            should be true if the given rows are out of order
      it should behave like select
        #select
          should return value of the first option
          should return value of the selected option
          should return the value attribute rather than content if present
          should select an option from a select box by id
          should select an option from a select box by label
          should select an option without giving a select box
          should favour exact matches to option labels
          should escape quotes (FAILED - 39)
          should obey from
          show match labels with preceding or trailing whitespace
          with a locator that doesn't exist
            should raise an error
          with an option that doesn't exist
            should raise an error
          with multiple select
            should return an empty value
            should return value of the selected options
            should select one option
            should select multiple options
            should remain selected if already selected
            should return value attribute rather than content if present
      it should behave like text
        #text
          should print the text of the page
          with css as default selector
            should print the text of the page
      it should behave like uncheck
        #uncheck
          should uncheck a checkbox by id
          should uncheck a checkbox by label
      it should behave like unselect
        #unselect
          with multiple select
            should unselect an option from a select box by id
            should unselect an option without a select box
            should unselect an option from a select box by label
            should favour exact matches to option labels
            should escape quotes
          with single select
            should raise an error
          with a locator that doesn't exist
            should raise an error
          with an option that doesn't exist
            should raise an error
      it should behave like within
        #within
          with CSS selector
            should click links in the given scope
            should assert content in the given scope
            should accept additional options
          with XPath selector
            should click links in the given scope
          with the default selector
            should use XPath
          with Node rather than selector
            should click links in the given scope
          with the default selector set to CSS
            should use CSS
          with click_link
            should click links in the given scope
            should raise an error if the scope is not found on the page
            should restore the scope when an error is raised
            with nested scopes
              should respect the inner scope
              should respect the outer scope
          with forms
            should fill in a field and click a button
        #within_fieldset
          should restrict scope to a fieldset given by id
          should restrict scope to a fieldset given by legend
        #within_table

An error occurred in an after hook
  NoMethodError: undefined method `reset!' for nil:NilClass
  occurred at /home/james/projects/terminus/vendor/capybara/lib/capybara/session.rb:70:in `reset!'


An error occurred in an after hook
  NoMethodError: undefined method `return_to_dock' for nil:NilClass
  occurred at /home/james/projects/terminus/spec/terminus_session_spec.rb:11:in `block (3 levels) in <top (required)>'

          should restrict scope to a fieldset given by id (FAILED - 40)
          should restrict scope to a fieldset given by legend
    it should behave like session with headers support
      #response_headers
        should return response headers
    it should behave like session with javascript support
      all JS specs
        Node#drag_to
          should drag and drop an object
        Node#reload
          without automatic reload
            should reload the current context of the node (FAILED - 41)
            should reload a parent node
            should not automatically reload
          with automatic reload
            should reload the current context of the node automatically (FAILED - 42)
            should reload a parent node automatically
            should reload a node automatically when using find
        #find
          should allow triggering of custom JS events
        #body
          should return the current state of the page
        #source
          should return the original, unmodified source of the page
        #evaluate_script
          should evaluate the given script and return whatever it produces
        #execute_script
          should execute the given script and return nothing
        #find
          should wait for asynchronous load
          with frozen time
            raises an error suggesting that Capybara is stuck in time
        #wait_until
          should wait for block to return true
          should raise Capybara::TimeoutError if block doesn't return true within timeout
          should accept custom timeout in seconds
          should default to Capybara.default_wait_time before timeout
        #click_link_or_button
          should wait for asynchronous load
        #click_link
          should wait for asynchronous load
        #click_button
          should wait for asynchronous load
        #fill_in
          should wait for asynchronous load
        #check
          should trigger associated events
        #has_xpath?
          should wait for content to appear
        #has_no_xpath?
          should wait for content to disappear
        #has_css?
          should wait for content to appear
        #has_no_xpath?
          should wait for content to disappear
        #has_content?
          should wait for content to appear
        #has_no_content?
          should wait for content to disappear
    it should behave like session with status code support
      #status_code
        should return response codes

Capybara::Driver::Terminus
  it should behave like driver
    #visit
      should move to another page
      should show the correct URL
    #body
      should return text reponses
      should return the full response html
      encoding of response between ascii and utf8
        should be valid with html entities
        should be valid without html entities
    #find
      with xpath selector
        should extract node texts
        should extract node attributes
        should extract boolean node attributes
        should allow retrieval of the value
        should allow assignment of field value
        should extract node tag name
        should extract node visibility
        should extract node checked state
        should extract node selected state
        should return document text on /html selector
  it should behave like driver with javascript support
    #find
      should find dynamically changed nodes
    #drag_to
      should drag and drop an object
    #evaluate_script
      should return the value of the executed script
  it should behave like driver with resynchronization support
    #find
      with synchronization turned on
        should wait for all ajax requests to finish
      with resynchronization turned off
        should not wait for ajax requests to finish
      with short synchronization timeout
        should raise an error
  it should behave like driver with header support
    should make headers available through response_headers
  it should behave like driver with status code support
    should make the status code available through status_code
  it should behave like driver with frame support
    #within_frame
      should find the div in frameOne
      should find the div in FrameTwo
      should find the text div in the main window after finding text in frameOne
      should find the text div in the main window after finding text in frameTwo
  it should behave like driver with cookies support
    #reset!
      should set and clean cookies
  it should behave like driver with infinite redirect detection

An error occurred in an after hook
  NoMethodError: undefined method `return_to_dock' for nil:NilClass
  occurred at /home/james/projects/terminus/spec/terminus_driver_spec.rb:10:in `block (2 levels) in <top (required)>'

    should follow 5 redirects (FAILED - 43)

An error occurred in an after hook
  URI::InvalidURIError: the scheme http does not accept registry part: :7004 (or bad hostname?)
  occurred at /home/james/.rbenv/versions/1.9.3-p194/lib/ruby/1.9.1/uri/generic.rb:213:in `initialize'

    should not follow more than 5 redirects (FAILED - 44)

Failures:

  1) Capybara::Session with terminus driver it should behave like session it should behave like first#first with prefer visible elements should prefer visible elements over invisible elements
     Failure/Error: @session.first(:css, 'a.visibility')[:id].should == 'visible'
     NoMethodError:
       undefined method `[]' for nil:NilClass
     Shared Example Group: "first" called from ./vendor/capybara/lib/capybara/spec/session.rb:87
     # ./vendor/capybara/lib/capybara/spec/session/first_spec.rb:67:in `block (4 levels) in <top (required)>'

  2) Capybara::Session with terminus driver it should behave like session it should behave like first#first with prefer visible elements should return the first invisible element if no visible elements exist
     Failure/Error: @session.first(:css, 'a.hidden')[:id].should == 'first_invisble'
     NoMethodError:
       undefined method `[]' for nil:NilClass
     Shared Example Group: "first" called from ./vendor/capybara/lib/capybara/spec/session.rb:87
     # ./vendor/capybara/lib/capybara/spec/session/first_spec.rb:71:in `block (4 levels) in <top (required)>'

  3) Capybara::Session with terminus driver it should behave like session it should behave like first#first without prefer visible elements should not prefer visible elements over invisible elements
     Failure/Error: @session.first(:css, 'a.visibility')[:id].should == 'invisible'
     NoMethodError:
       undefined method `[]' for nil:NilClass
     Shared Example Group: "first" called from ./vendor/capybara/lib/capybara/spec/session.rb:87
     # ./vendor/capybara/lib/capybara/spec/session/first_spec.rb:87:in `block (4 levels) in <top (required)>'

  4) Capybara::Session with terminus driver it should behave like session it should behave like attach_file#attach_file with normal form should set a file path by id
     Failure/Error: @session.attach_file "form_image", __FILE__
     Capybara::NotSupportedByDriverError:
       Capybara::NotSupportedByDriverError
     Shared Example Group: "attach_file" called from ./vendor/capybara/lib/capybara/spec/session.rb:88
     # ./lib/terminus/node.rb:46:in `set'
     # ./vendor/capybara/lib/capybara/node/element.rb:75:in `block in set'
     # ./vendor/capybara/lib/capybara/node/base.rb:46:in `wait_until'
     # ./vendor/capybara/lib/capybara/node/element.rb:75:in `set'
     # ./vendor/capybara/lib/capybara/node/actions.rb:158:in `attach_file'
     # (eval):2:in `attach_file'
     # ./vendor/capybara/lib/capybara/spec/session/attach_file_spec.rb:12:in `block (4 levels) in <top (required)>'

  5) Capybara::Session with terminus driver it should behave like session it should behave like attach_file#attach_file with normal form should set a file path by label
     Failure/Error: @session.attach_file "Image", __FILE__
     Capybara::NotSupportedByDriverError:
       Capybara::NotSupportedByDriverError
     Shared Example Group: "attach_file" called from ./vendor/capybara/lib/capybara/spec/session.rb:88
     # ./lib/terminus/node.rb:46:in `set'
     # ./vendor/capybara/lib/capybara/node/element.rb:75:in `block in set'
     # ./vendor/capybara/lib/capybara/node/base.rb:46:in `wait_until'
     # ./vendor/capybara/lib/capybara/node/element.rb:75:in `set'
     # ./vendor/capybara/lib/capybara/node/actions.rb:158:in `attach_file'
     # (eval):2:in `attach_file'
     # ./vendor/capybara/lib/capybara/spec/session/attach_file_spec.rb:18:in `block (4 levels) in <top (required)>'

  6) Capybara::Session with terminus driver it should behave like session it should behave like attach_file#attach_file with multipart form should set a file path by id
     Failure/Error: @session.attach_file "form_document", @test_file_path
     Capybara::NotSupportedByDriverError:
       Capybara::NotSupportedByDriverError
     Shared Example Group: "attach_file" called from ./vendor/capybara/lib/capybara/spec/session.rb:88
     # ./lib/terminus/node.rb:46:in `set'
     # ./vendor/capybara/lib/capybara/node/element.rb:75:in `block in set'
     # ./vendor/capybara/lib/capybara/node/base.rb:46:in `wait_until'
     # ./vendor/capybara/lib/capybara/node/element.rb:75:in `set'
     # ./vendor/capybara/lib/capybara/node/actions.rb:158:in `attach_file'
     # (eval):2:in `attach_file'
     # ./vendor/capybara/lib/capybara/spec/session/attach_file_spec.rb:26:in `block (4 levels) in <top (required)>'

  7) Capybara::Session with terminus driver it should behave like session it should behave like attach_file#attach_file with multipart form should set a file path by label
     Failure/Error: @session.attach_file "Document", @test_file_path
     Capybara::NotSupportedByDriverError:
       Capybara::NotSupportedByDriverError
     Shared Example Group: "attach_file" called from ./vendor/capybara/lib/capybara/spec/session.rb:88
     # ./lib/terminus/node.rb:46:in `set'
     # ./vendor/capybara/lib/capybara/node/element.rb:75:in `block in set'
     # ./vendor/capybara/lib/capybara/node/base.rb:46:in `wait_until'
     # ./vendor/capybara/lib/capybara/node/element.rb:75:in `set'
     # ./vendor/capybara/lib/capybara/node/actions.rb:158:in `attach_file'
     # (eval):2:in `attach_file'
     # ./vendor/capybara/lib/capybara/spec/session/attach_file_spec.rb:32:in `block (4 levels) in <top (required)>'

  8) Capybara::Session with terminus driver it should behave like session it should behave like attach_file#attach_file with multipart form should send content type text/plain when uploading a text file
     Failure/Error: @session.attach_file "Document", @test_file_path
     Capybara::NotSupportedByDriverError:
       Capybara::NotSupportedByDriverError
     Shared Example Group: "attach_file" called from ./vendor/capybara/lib/capybara/spec/session.rb:88
     # ./lib/terminus/node.rb:46:in `set'
     # ./vendor/capybara/lib/capybara/node/element.rb:75:in `block in set'
     # ./vendor/capybara/lib/capybara/node/base.rb:46:in `wait_until'
     # ./vendor/capybara/lib/capybara/node/element.rb:75:in `set'
     # ./vendor/capybara/lib/capybara/node/actions.rb:158:in `attach_file'
     # (eval):2:in `attach_file'
     # ./vendor/capybara/lib/capybara/spec/session/attach_file_spec.rb:43:in `block (4 levels) in <top (required)>'

  9) Capybara::Session with terminus driver it should behave like session it should behave like attach_file#attach_file with multipart form should send content type image/jpeg when uploading an image
     Failure/Error: @session.attach_file "Document", @test_jpg_file_path
     Capybara::NotSupportedByDriverError:
       Capybara::NotSupportedByDriverError
     Shared Example Group: "attach_file" called from ./vendor/capybara/lib/capybara/spec/session.rb:88
     # ./lib/terminus/node.rb:46:in `set'
     # ./vendor/capybara/lib/capybara/node/element.rb:75:in `block in set'
     # ./vendor/capybara/lib/capybara/node/base.rb:46:in `wait_until'
     # ./vendor/capybara/lib/capybara/node/element.rb:75:in `set'
     # ./vendor/capybara/lib/capybara/node/actions.rb:158:in `attach_file'
     # (eval):2:in `attach_file'
     # ./vendor/capybara/lib/capybara/spec/session/attach_file_spec.rb:49:in `block (4 levels) in <top (required)>'

  10) Capybara::Session with terminus driver it should behave like session it should behave like attach_file#attach_file with multipart form should not break when using HTML5 multiple file input
     Failure/Error: @session.attach_file "Multiple Documents", @test_file_path
     Capybara::NotSupportedByDriverError:
       Capybara::NotSupportedByDriverError
     Shared Example Group: "attach_file" called from ./vendor/capybara/lib/capybara/spec/session.rb:88
     # ./lib/terminus/node.rb:46:in `set'
     # ./vendor/capybara/lib/capybara/node/element.rb:75:in `block in set'
     # ./vendor/capybara/lib/capybara/node/base.rb:46:in `wait_until'
     # ./vendor/capybara/lib/capybara/node/element.rb:75:in `set'
     # ./vendor/capybara/lib/capybara/node/actions.rb:158:in `attach_file'
     # (eval):2:in `attach_file'
     # ./vendor/capybara/lib/capybara/spec/session/attach_file_spec.rb:55:in `block (4 levels) in <top (required)>'

  11) Capybara::Session with terminus driver it should behave like session it should behave like fill_in#fill_in should fill in a text field by label without for
     Failure/Error: extract_results(@session)['street'].should == 'Avenue Q'
       expected: "Avenue Q"
            got: "Sesame street 66" (using ==)
     Shared Example Group: "fill_in" called from ./vendor/capybara/lib/capybara/spec/session.rb:94
     # ./vendor/capybara/lib/capybara/spec/session/fill_in_spec.rb:22:in `block (3 levels) in <top (required)>'

  12) Capybara::Session with terminus driver it should behave like session it should behave like fill_in#fill_in should fill in a textarea by label
     Failure/Error: Unable to find matching line from backtrace
     Terminus::Timeouts::TimeoutError:
       Waited 30s but could not get a selected_browser
     Shared Example Group: "fill_in" called from ./vendor/capybara/lib/capybara/spec/session.rb:94
     # ./lib/terminus/timeouts.rb:19:in `wait_with_timeout'
     # ./lib/terminus/controller.rb:24:in `browser='
     # ./spec/terminus_session_spec.rb:7:in `block (3 levels) in <top (required)>'

  13) Capybara::Session with terminus driver it should behave like session it should behave like find#find the returned node should have a reference to its parent if there is one
     Failure/Error: Unable to find matching line from backtrace
     Terminus::Timeouts::TimeoutError:
       Waited 30s but could not get a selected_browser
     Shared Example Group: "find" called from ./vendor/capybara/lib/capybara/spec/session.rb:99
     # ./lib/terminus/timeouts.rb:19:in `wait_with_timeout'
     # ./lib/terminus/controller.rb:24:in `browser='
     # ./spec/terminus_session_spec.rb:7:in `block (3 levels) in <top (required)>'

  14) Capybara::Session with terminus driver it should behave like session it should behave like find#find with custom selector with :for option should use the selector when it matches the :for option
     Failure/Error: @session.find(:monkey, '2').text.should == 'Monkey Paul'
     Capybara::ElementNotFound:
       Unable to find monkey "2"
     Shared Example Group: "find" called from ./vendor/capybara/lib/capybara/spec/session.rb:99
     # ./vendor/capybara/lib/capybara/node/finders.rb:154:in `raise_find_error'
     # ./vendor/capybara/lib/capybara/node/finders.rb:27:in `block in find'
     # ./vendor/capybara/lib/capybara/node/base.rb:46:in `wait_until'
     # ./vendor/capybara/lib/capybara/node/finders.rb:27:in `find'
     # (eval):2:in `find'
     # ./vendor/capybara/lib/capybara/spec/session/find_spec.rb:81:in `block (4 levels) in <top (required)>'

  15) Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_css? with maximum should be true when content occurs same or fewer times than given
     Failure/Error: @session.should have_css("h2.head", :maximum => 5) # edge case
       expected #has_css?("h2.head", {:maximum=>5}) to return true, got false
     Shared Example Group: "has_css" called from ./vendor/capybara/lib/capybara/spec/session.rb:101
     # ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:66:in `block (4 levels) in <top (required)>'

  16) Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_css? with maximum should coerce maximum to an integer
     Failure/Error: @session.should have_css("h2.head", :maximum => "5") # edge case
       expected #has_css?("h2.head", {:maximum=>"5"}) to return true, got false
     Shared Example Group: "has_css" called from ./vendor/capybara/lib/capybara/spec/session.rb:101
     # ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:82:in `block (4 levels) in <top (required)>'

  17) Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_css? with minimum should be true when content occurs same or more times than given
     Failure/Error: @session.should have_css("h2.head", :minimum => 5) # edge case
       expected #has_css?("h2.head", {:minimum=>5}) to return true, got false
     Shared Example Group: "has_css" called from ./vendor/capybara/lib/capybara/spec/session.rb:101
     # ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:89:in `block (4 levels) in <top (required)>'

  18) Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_css? with minimum should coerce minimum to an integer
     Failure/Error: @session.should have_css("h2.head", :minimum => "5") # edge case
       expected #has_css?("h2.head", {:minimum=>"5"}) to return true, got false
     Shared Example Group: "has_css" called from ./vendor/capybara/lib/capybara/spec/session.rb:101
     # ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:105:in `block (4 levels) in <top (required)>'

  19) Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_no_css? with maximum should be false when content occurs same or fewer times than given
     Failure/Error: @session.should_not have_no_css("h2.head", :maximum => 5) # edge case
       expected #has_no_css?("h2.head", {:maximum=>5}) to return false, got true
     Shared Example Group: "has_css" called from ./vendor/capybara/lib/capybara/spec/session.rb:101
     # ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:187:in `block (4 levels) in <top (required)>'

  20) Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_no_css? with maximum should coerce maximum to an integer
     Failure/Error: @session.should_not have_no_css("h2.head", :maximum => "5") # edge case
       expected #has_no_css?("h2.head", {:maximum=>"5"}) to return false, got true
     Shared Example Group: "has_css" called from ./vendor/capybara/lib/capybara/spec/session.rb:101
     # ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:203:in `block (4 levels) in <top (required)>'

  21) Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_no_css? with minimum should be false when content occurs more times than given
     Failure/Error: @session.should_not have_no_css("h2.head", :minimum => 4) # edge case
       expected #has_no_css?("h2.head", {:minimum=>4}) to return false, got true
     Shared Example Group: "has_css" called from ./vendor/capybara/lib/capybara/spec/session.rb:101
     # ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:210:in `block (4 levels) in <top (required)>'

  22) Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_no_css? with minimum should coerce minimum to an integer
     Failure/Error: @session.should_not have_no_css("h2.head", :minimum => "4") # edge case
       expected #has_no_css?("h2.head", {:minimum=>"4"}) to return false, got true
     Shared Example Group: "has_css" called from ./vendor/capybara/lib/capybara/spec/session.rb:101
     # ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:226:in `block (4 levels) in <top (required)>'

  23) Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_css? with maximum should be true when content occurs same or fewer times than given
     Failure/Error: @session.should have_css("h2.head", :maximum => 5) # edge case
       expected #has_css?("h2.head", {:maximum=>5}) to return true, got false
     Shared Example Group: "has_css" called from ./vendor/capybara/lib/capybara/spec/session.rb:102
     # ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:66:in `block (4 levels) in <top (required)>'

  24) Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_css? with maximum should coerce maximum to an integer
     Failure/Error: @session.should have_css("h2.head", :maximum => "5") # edge case
       expected #has_css?("h2.head", {:maximum=>"5"}) to return true, got false
     Shared Example Group: "has_css" called from ./vendor/capybara/lib/capybara/spec/session.rb:102
     # ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:82:in `block (4 levels) in <top (required)>'

  25) Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_css? with minimum should be true when content occurs same or more times than given
     Failure/Error: @session.should have_css("h2.head", :minimum => 5) # edge case
       expected #has_css?("h2.head", {:minimum=>5}) to return true, got false
     Shared Example Group: "has_css" called from ./vendor/capybara/lib/capybara/spec/session.rb:102
     # ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:89:in `block (4 levels) in <top (required)>'

  26) Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_css? with minimum should coerce minimum to an integer
     Failure/Error: @session.should have_css("h2.head", :minimum => "5") # edge case
       expected #has_css?("h2.head", {:minimum=>"5"}) to return true, got false
     Shared Example Group: "has_css" called from ./vendor/capybara/lib/capybara/spec/session.rb:102
     # ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:105:in `block (4 levels) in <top (required)>'

  27) Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_no_css? with maximum should be false when content occurs same or fewer times than given
     Failure/Error: @session.should_not have_no_css("h2.head", :maximum => 5) # edge case
       expected #has_no_css?("h2.head", {:maximum=>5}) to return false, got true
     Shared Example Group: "has_css" called from ./vendor/capybara/lib/capybara/spec/session.rb:102
     # ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:187:in `block (4 levels) in <top (required)>'

  28) Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_no_css? with maximum should coerce maximum to an integer
     Failure/Error: @session.should_not have_no_css("h2.head", :maximum => "5") # edge case
       expected #has_no_css?("h2.head", {:maximum=>"5"}) to return false, got true
     Shared Example Group: "has_css" called from ./vendor/capybara/lib/capybara/spec/session.rb:102
     # ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:203:in `block (4 levels) in <top (required)>'

  29) Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_no_css? with minimum should be false when content occurs more times than given
     Failure/Error: @session.should_not have_no_css("h2.head", :minimum => 4) # edge case
       expected #has_no_css?("h2.head", {:minimum=>4}) to return false, got true
     Shared Example Group: "has_css" called from ./vendor/capybara/lib/capybara/spec/session.rb:102
     # ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:210:in `block (4 levels) in <top (required)>'

  30) Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_no_css? with minimum should coerce minimum to an integer
     Failure/Error: @session.should_not have_no_css("h2.head", :minimum => "4") # edge case
       expected #has_no_css?("h2.head", {:minimum=>"4"}) to return false, got true
     Shared Example Group: "has_css" called from ./vendor/capybara/lib/capybara/spec/session.rb:102
     # ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:226:in `block (4 levels) in <top (required)>'

  31) Capybara::Session with terminus driver it should behave like session it should behave like has_field#has_checked_field? should be false after a checked checkbox is unchecked
     Failure/Error: @session.uncheck('form_pets_dog')
     Capybara::ElementNotFound:
       cannot uncheck field, no checkbox with id, name, or label 'form_pets_dog' found
     Shared Example Group: "has_field" called from ./vendor/capybara/lib/capybara/spec/session.rb:107
     # ./vendor/capybara/lib/capybara/node/finders.rb:154:in `raise_find_error'
     # ./vendor/capybara/lib/capybara/node/finders.rb:27:in `block in find'
     # ./vendor/capybara/lib/capybara/node/base.rb:46:in `wait_until'
     # ./vendor/capybara/lib/capybara/node/finders.rb:27:in `find'
     # ./vendor/capybara/lib/capybara/node/actions.rb:96:in `uncheck'
     # (eval):2:in `uncheck'
     # ./vendor/capybara/lib/capybara/spec/session/has_field_spec.rb:103:in `block (3 levels) in <top (required)>'

  32) Capybara::Session with terminus driver it should behave like session it should behave like has_field#has_unchecked_field? should be false after an unchecked radio button is chosen
     Failure/Error: Unable to find matching line from backtrace
     Terminus::Timeouts::TimeoutError:
       Waited 30s but could not get a selected_browser
     Shared Example Group: "has_field" called from ./vendor/capybara/lib/capybara/spec/session.rb:107
     # ./lib/terminus/timeouts.rb:19:in `wait_with_timeout'
     # ./lib/terminus/controller.rb:24:in `browser='
     # ./spec/terminus_session_spec.rb:7:in `block (3 levels) in <top (required)>'

  33) Capybara::Session with terminus driver it should behave like session it should behave like has_select#has_select? with options should be true if a field with the given options is on the page
     Failure/Error: @session.should have_select('form_locale', :options => ['English'])
       expected #has_select?("form_locale", {:options=>["English"]}) to return true, got false
     Shared Example Group: "has_select" called from ./vendor/capybara/lib/capybara/spec/session.rb:108
     # ./vendor/capybara/lib/capybara/spec/session/has_select_spec.rb:53:in `block (4 levels) in <top (required)>'

  34) Capybara::Session with terminus driver it should behave like session it should behave like has_select#has_no_select? with options should be false if a field with the given options is on the page
     Failure/Error: @session.should_not have_no_select('form_locale', :options => ['English'])
       expected #has_no_select?("form_locale", {:options=>["English"]}) to return false, got true
     Shared Example Group: "has_select" called from ./vendor/capybara/lib/capybara/spec/session.rb:108
     # ./vendor/capybara/lib/capybara/spec/session/has_select_spec.rb:116:in `block (4 levels) in <top (required)>'

  35) Capybara::Session with terminus driver it should behave like session it should behave like has_table#has_table? with rows should be true if a table with the given rows is on the page
     Failure/Error: @session.should have_table('Ransom', :rows => [['2007', '$300', '$100']])
       expected #has_table?("Ransom", {:rows=>[["2007", "$300", "$100"]]}) to return true, got false
     Shared Example Group: "has_table" called from ./vendor/capybara/lib/capybara/spec/session.rb:109
     # ./vendor/capybara/lib/capybara/spec/session/has_table_spec.rb:18:in `block (4 levels) in <top (required)>'

  36) Capybara::Session with terminus driver it should behave like session it should behave like has_table#has_table? with rows should be true if the given rows are incomplete
     Failure/Error: @session.should have_table('Ransom', :rows => [['$300', '$100']])
       expected #has_table?("Ransom", {:rows=>[["$300", "$100"]]}) to return true, got false
     Shared Example Group: "has_table" called from ./vendor/capybara/lib/capybara/spec/session.rb:109
     # ./vendor/capybara/lib/capybara/spec/session/has_table_spec.rb:23:in `block (4 levels) in <top (required)>'

  37) Capybara::Session with terminus driver it should behave like session it should behave like has_table#has_no_table? with rows should be false if a table with the given rows is on the page
     Failure/Error: @session.should_not have_no_table('Ransom', :rows => [['2007', '$300', '$100']])
       expected #has_no_table?("Ransom", {:rows=>[["2007", "$300", "$100"]]}) to return false, got true
     Shared Example Group: "has_table" called from ./vendor/capybara/lib/capybara/spec/session.rb:109
     # ./vendor/capybara/lib/capybara/spec/session/has_table_spec.rb:64:in `block (4 levels) in <top (required)>'

  38) Capybara::Session with terminus driver it should behave like session it should behave like has_table#has_no_table? with rows should be false if the given rows are incomplete
     Failure/Error: @session.should_not have_no_table('Ransom', :rows => [['$300', '$100']])
       expected #has_no_table?("Ransom", {:rows=>[["$300", "$100"]]}) to return false, got true
     Shared Example Group: "has_table" called from ./vendor/capybara/lib/capybara/spec/session.rb:109
     # ./vendor/capybara/lib/capybara/spec/session/has_table_spec.rb:69:in `block (4 levels) in <top (required)>'

  39) Capybara::Session with terminus driver it should behave like session it should behave like select#select should escape quotes
     Failure/Error: @session.select("John's made-up language", :from => 'Locale')
     Capybara::ElementNotFound:
       cannot select option, no select box with id, name, or label 'Locale' found
     Shared Example Group: "select" called from ./vendor/capybara/lib/capybara/spec/session.rb:110
     # ./vendor/capybara/lib/capybara/node/finders.rb:154:in `raise_find_error'
     # ./vendor/capybara/lib/capybara/node/finders.rb:27:in `block in find'
     # ./vendor/capybara/lib/capybara/node/base.rb:46:in `wait_until'
     # ./vendor/capybara/lib/capybara/node/finders.rb:27:in `find'
     # ./vendor/capybara/lib/capybara/node/actions.rb:114:in `select'
     # (eval):2:in `select'
     # ./vendor/capybara/lib/capybara/spec/session/select_spec.rb:45:in `block (3 levels) in <top (required)>'

  40) Capybara::Session with terminus driver it should behave like session it should behave like within#within_table should restrict scope to a fieldset given by id
     Failure/Error: Unable to find matching line from backtrace
     Terminus::Timeouts::TimeoutError:
       Waited 30s but could not get a selected_browser
     Shared Example Group: "within" called from ./vendor/capybara/lib/capybara/spec/session.rb:114
     # ./lib/terminus/timeouts.rb:19:in `wait_with_timeout'
     # ./lib/terminus/controller.rb:24:in `browser='
     # ./spec/terminus_session_spec.rb:7:in `block (3 levels) in <top (required)>'

  41) Capybara::Session with terminus driver it should behave like session with javascript support all JS specs Node#reload without automatic reload should reload the current context of the node
     Failure/Error: node = @session.find(:css, '#reload-me')
     Capybara::ElementNotFound:
       Unable to find css "#reload-me"
     Shared Example Group: "session with javascript support" called from ./spec/terminus_session_spec.rb:16
     # ./vendor/capybara/lib/capybara/node/finders.rb:154:in `raise_find_error'
     # ./vendor/capybara/lib/capybara/node/finders.rb:27:in `block in find'
     # ./vendor/capybara/lib/capybara/node/base.rb:46:in `wait_until'
     # ./vendor/capybara/lib/capybara/node/finders.rb:27:in `find'
     # (eval):2:in `find'
     # ./vendor/capybara/lib/capybara/spec/session/javascript.rb:26:in `block (5 levels) in <top (required)>'

  42) Capybara::Session with terminus driver it should behave like session with javascript support all JS specs Node#reload with automatic reload should reload the current context of the node automatically
     Failure/Error: node.text.should == 'RELOADED'
     Terminus::ObsoleteElementError:
       Terminus::ObsoleteElementError
     Shared Example Group: "session with javascript support" called from ./spec/terminus_session_spec.rb:16
     # ./lib/terminus/browser.rb:36:in `ask'
     # ./lib/terminus/node.rb:81:in `block (2 levels) in <class:Node>'
     # ./vendor/capybara/lib/capybara/node/element.rb:44:in `block in text'
     # ./vendor/capybara/lib/capybara/node/base.rb:46:in `wait_until'
     # ./vendor/capybara/lib/capybara/node/element.rb:44:in `text'
     # ./vendor/capybara/lib/capybara/spec/session/javascript.rb:58:in `block (5 levels) in <top (required)>'

  43) Capybara::Driver::Terminus it should behave like driver with infinite redirect detection should follow 5 redirects
     Failure/Error: @driver.body.should include('redirection complete')
     NoMethodError:
       undefined method `body' for nil:NilClass
     Shared Example Group: "driver with infinite redirect detection" called from ./spec/terminus_driver_spec.rb:23
     # ./vendor/capybara/lib/capybara/spec/driver.rb:289:in `block (2 levels) in <top (required)>'

  44) Capybara::Driver::Terminus it should behave like driver with infinite redirect detection should not follow more than 5 redirects
     Failure/Error: running do
       expected Capybara::InfiniteRedirectError but nothing was raised
     Shared Example Group: "driver with infinite redirect detection" called from ./spec/terminus_driver_spec.rb:23
     # ./vendor/capybara/lib/capybara/spec/driver.rb:293:in `block (2 levels) in <top (required)>'

Finished in 224 minutes 4.47 seconds
496 examples, 44 failures

Failed examples:

rspec ./vendor/capybara/lib/capybara/spec/session/first_spec.rb:66 # Capybara::Session with terminus driver it should behave like session it should behave like first#first with prefer visible elements should prefer visible elements over invisible elements
rspec ./vendor/capybara/lib/capybara/spec/session/first_spec.rb:70 # Capybara::Session with terminus driver it should behave like session it should behave like first#first with prefer visible elements should return the first invisible element if no visible elements exist
rspec ./vendor/capybara/lib/capybara/spec/session/first_spec.rb:86 # Capybara::Session with terminus driver it should behave like session it should behave like first#first without prefer visible elements should not prefer visible elements over invisible elements
rspec ./vendor/capybara/lib/capybara/spec/session/attach_file_spec.rb:11 # Capybara::Session with terminus driver it should behave like session it should behave like attach_file#attach_file with normal form should set a file path by id
rspec ./vendor/capybara/lib/capybara/spec/session/attach_file_spec.rb:17 # Capybara::Session with terminus driver it should behave like session it should behave like attach_file#attach_file with normal form should set a file path by label
rspec ./vendor/capybara/lib/capybara/spec/session/attach_file_spec.rb:25 # Capybara::Session with terminus driver it should behave like session it should behave like attach_file#attach_file with multipart form should set a file path by id
rspec ./vendor/capybara/lib/capybara/spec/session/attach_file_spec.rb:31 # Capybara::Session with terminus driver it should behave like session it should behave like attach_file#attach_file with multipart form should set a file path by label
rspec ./vendor/capybara/lib/capybara/spec/session/attach_file_spec.rb:42 # Capybara::Session with terminus driver it should behave like session it should behave like attach_file#attach_file with multipart form should send content type text/plain when uploading a text file
rspec ./vendor/capybara/lib/capybara/spec/session/attach_file_spec.rb:48 # Capybara::Session with terminus driver it should behave like session it should behave like attach_file#attach_file with multipart form should send content type image/jpeg when uploading an image
rspec ./vendor/capybara/lib/capybara/spec/session/attach_file_spec.rb:54 # Capybara::Session with terminus driver it should behave like session it should behave like attach_file#attach_file with multipart form should not break when using HTML5 multiple file input
rspec ./vendor/capybara/lib/capybara/spec/session/fill_in_spec.rb:19 # Capybara::Session with terminus driver it should behave like session it should behave like fill_in#fill_in should fill in a text field by label without for
rspec ./vendor/capybara/lib/capybara/spec/session/fill_in_spec.rb:43 # Capybara::Session with terminus driver it should behave like session it should behave like fill_in#fill_in should fill in a textarea by label
rspec ./vendor/capybara/lib/capybara/spec/session/find_spec.rb:36 # Capybara::Session with terminus driver it should behave like session it should behave like find#find the returned node should have a reference to its parent if there is one
rspec ./vendor/capybara/lib/capybara/spec/session/find_spec.rb:76 # Capybara::Session with terminus driver it should behave like session it should behave like find#find with custom selector with :for option should use the selector when it matches the :for option
rspec ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:65 # Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_css? with maximum should be true when content occurs same or fewer times than given
rspec ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:81 # Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_css? with maximum should coerce maximum to an integer
rspec ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:88 # Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_css? with minimum should be true when content occurs same or more times than given
rspec ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:104 # Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_css? with minimum should coerce minimum to an integer
rspec ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:186 # Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_no_css? with maximum should be false when content occurs same or fewer times than given
rspec ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:202 # Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_no_css? with maximum should coerce maximum to an integer
rspec ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:209 # Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_no_css? with minimum should be false when content occurs more times than given
rspec ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:225 # Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_no_css? with minimum should coerce minimum to an integer
rspec ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:65 # Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_css? with maximum should be true when content occurs same or fewer times than given
rspec ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:81 # Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_css? with maximum should coerce maximum to an integer
rspec ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:88 # Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_css? with minimum should be true when content occurs same or more times than given
rspec ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:104 # Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_css? with minimum should coerce minimum to an integer
rspec ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:186 # Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_no_css? with maximum should be false when content occurs same or fewer times than given
rspec ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:202 # Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_no_css? with maximum should coerce maximum to an integer
rspec ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:209 # Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_no_css? with minimum should be false when content occurs more times than given
rspec ./vendor/capybara/lib/capybara/spec/session/has_css_spec.rb:225 # Capybara::Session with terminus driver it should behave like session it should behave like has_css#has_no_css? with minimum should coerce minimum to an integer
rspec ./vendor/capybara/lib/capybara/spec/session/has_field_spec.rb:102 # Capybara::Session with terminus driver it should behave like session it should behave like has_field#has_checked_field? should be false after a checked checkbox is unchecked
rspec ./vendor/capybara/lib/capybara/spec/session/has_field_spec.rb:163 # Capybara::Session with terminus driver it should behave like session it should behave like has_field#has_unchecked_field? should be false after an unchecked radio button is chosen
rspec ./vendor/capybara/lib/capybara/spec/session/has_select_spec.rb:52 # Capybara::Session with terminus driver it should behave like session it should behave like has_select#has_select? with options should be true if a field with the given options is on the page
rspec ./vendor/capybara/lib/capybara/spec/session/has_select_spec.rb:115 # Capybara::Session with terminus driver it should behave like session it should behave like has_select#has_no_select? with options should be false if a field with the given options is on the page
rspec ./vendor/capybara/lib/capybara/spec/session/has_table_spec.rb:17 # Capybara::Session with terminus driver it should behave like session it should behave like has_table#has_table? with rows should be true if a table with the given rows is on the page
rspec ./vendor/capybara/lib/capybara/spec/session/has_table_spec.rb:22 # Capybara::Session with terminus driver it should behave like session it should behave like has_table#has_table? with rows should be true if the given rows are incomplete
rspec ./vendor/capybara/lib/capybara/spec/session/has_table_spec.rb:63 # Capybara::Session with terminus driver it should behave like session it should behave like has_table#has_no_table? with rows should be false if a table with the given rows is on the page
rspec ./vendor/capybara/lib/capybara/spec/session/has_table_spec.rb:68 # Capybara::Session with terminus driver it should behave like session it should behave like has_table#has_no_table? with rows should be false if the given rows are incomplete
rspec ./vendor/capybara/lib/capybara/spec/session/select_spec.rb:44 # Capybara::Session with terminus driver it should behave like session it should behave like select#select should escape quotes
rspec ./vendor/capybara/lib/capybara/spec/session/within_spec.rb:162 # Capybara::Session with terminus driver it should behave like session it should behave like within#within_table should restrict scope to a fieldset given by id
rspec ./vendor/capybara/lib/capybara/spec/session/javascript.rb:24 # Capybara::Session with terminus driver it should behave like session with javascript support all JS specs Node#reload without automatic reload should reload the current context of the node
rspec ./vendor/capybara/lib/capybara/spec/session/javascript.rb:53 # Capybara::Session with terminus driver it should behave like session with javascript support all JS specs Node#reload with automatic reload should reload the current context of the node automatically
rspec ./vendor/capybara/lib/capybara/spec/driver.rb:287 # Capybara::Driver::Terminus it should behave like driver with infinite redirect detection should follow 5 redirects
rspec ./vendor/capybara/lib/capybara/spec/driver.rb:292 # Capybara::Driver::Terminus it should behave like driver with infinite redirect detection should not follow more than 5 redirects
